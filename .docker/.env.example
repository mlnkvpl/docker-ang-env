#######################################################################
# -PROJECT OPTIONS-
#

# list of all docker-compose files containing separate services 
COMPOSE_FILE=./angular-docker-compose.yml;./backend-docker-compose.yml
# name of the project
COMPOSE_PROJECT_NAME=test-app-project
# a tag for images and an appendix for container names
APP_NAME=test-app


#######################################################################
#  -BACKEND OPTIONS-
#
# test server to simulate communication with production backend server

# those two variables usually don't need to be chnaged, leave it as is  
BACKEND_HOST=0.0.0.0
BACKEND_INSIDE_PORT=3080
# outside port to communicate with your application on 127.0.0.1
BACKEND_OUTSIDE_PORT=3080
# local volume directory
BACKEND_VOLUME_PATH='./../workdir/backend'


#######################################################################
#  -ANGULAR OPTIONS- 
# 

# runs 'ng new <APP_NAME>' (only if the local volume directory is empty) 
ANGULAR_DO_INSTALL=true
# add parameters for 'ng new' or leave it empty
ANGULAR_NG_NEW_PARAMETERS='--style=scss'
# or just clone a project from existing (public) repo
ANGULAR_APP_REPOSITORY=https://github.com/mlnkvpl/ang-example-app.git
# specify angular version or leave it blank to get latest(release operators do work too, eg. ^11.0.0)
ANGULAR_VERSION=11.0.2
# those two variables usually don't need to be chnaged, leave it as is  
ANGULAR_HOST=0.0.0.0
ANGULAR_INSIDE_PORT=4200
# outside port to communicate with your application on 127.0.0.1
ANGULAR_OUTSIDE_PORT=4200
# local volume directory
ANGULAR_VOLUME_PATH='./../workdir/angular'
# additional commands to run after install if needed
ANGULAR_ADDITIONAL_COMMAND='npm install -g gulp && gulp'
