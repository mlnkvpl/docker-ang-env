version: '3.8'
services:
  backend:
    build:
      context: ./backend
      args:
        BACKEND_OUTSIDE_PORT: "${BACKEND_OUTSIDE_PORT}"
    image: "backend:${APP_NAME}"
    container_name: "backend-${APP_NAME}"
    restart: unless-stopped
    environment:
#      SERVER_PORT: "${BACKEND_INSIDE_PORT}"
      BACKEND_HOST: "${BACKEND_HOST}"
      BACKEND_INSIDE_PORT: "${BACKEND_INSIDE_PORT}"
      BACKEND_OUTSIDE_PORT: "${BACKEND_OUTSIDE_PORT}"
    volumes:
      - ./../workdir/backend:/usr/src/app
    ports:
      - "${BACKEND_OUTSIDE_PORT}:${BACKEND_INSIDE_PORT}"
    command:
      - /tmp/scripts/init.sh
    networks:
      - mynetwork
  angular:
    build:
      context: ./angular
      args:
        ANGULAR_OUTSIDE_PORT: "${ANGULAR_OUTSIDE_PORT}"
        ANGULAR_VERSION: "${ANGULAR_VERSION}"
    image: "angular:${APP_NAME}"
    container_name: "angular-${APP_NAME}"
    environment:
      APP_NAME: "${APP_NAME}"
      ANGULAR_APP_REPOSITORY: "${APP_REPOSITORY}"
      ANGULAR_HOST: "${ANGULAR_HOST}"
      ANGULAR_INSIDE_PORT: "${ANGULAR_INSIDE_PORT}"
      ANGULAR_OUTSIDE_PORT: "${ANGULAR_OUTSIDE_PORT}"
      ANGULAR_DO_INSTALL: "${ANGULAR_DO_INSTALL}"
    volumes:
      - ./../workdir/angular:/usr/src/app
    ports:
      - "${ANGULAR_OUTSIDE_PORT}:${ANGULAR_INSIDE_PORT}"
    command:
      - /tmp/scripts/init.sh
    networks:
      - mynetwork
networks:
  mynetwork:
    name: "${APP_NAME}-net"
    driver: bridge